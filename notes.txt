
c datatypes
------------
int a = 10 ;
float b = 34.43;
char
double
long
short


python objects
---------------
Everything in python is a object.
every object contains mehods


number
-----
number can be integer or decimal or hexa or oct.

aval = 10
bval = 34.3

string
------
string is defined in single or double or triple quotes.

aname = 'python programming'
bname = "java programming"
cname = """spark programming"""


list ( array in c)
------
list contains set of elements.
Elements can be number,strings or any combination.
list is defined in [].

alist = [10,20,30,40]
blist = ["python","unix","oracle"]
clist = [40,34.343,"python",[34,5]]


tuple ( immutable  unchangeable  uneditable)
-------
tuple contains set of elements.
Elements can be number,strings or any combination.
tuple is defined in ().
tuple is immutable
*** Elemeents inside tuple cant be modified directly ***

atup = (45,32,5,3,45)
bup = ("jav","oracle",'perl')



dictionary  ( json  hash   hashmap  map   associative array)
------------
dictionary is all about keys and values.
dictionary is defined in {}.
keys are always unique
key can be either number or string
value can be integer or string or list or tuple or dict.

syntax:    object = { key:value , key:value , key:value }
example:     book = {"chap1":10 ,"chap2":20 ,"chap3":30 }
             data = {1:2,3:4,5:6}
             book = {"chap1":["sita","US"] ,"chap2":["rita","UK"]}

index 
-----
chap1   10
chap2   20 
chap3   30
chap1 


set ( venn diagrams)
---
set is UNORDERED collection of UNIQUE elements of same type.

aset = {10,10,20,30,30}


condition
--------
simple if
if-else 
if-elif-elif-elif-elif-else


c
---
if ( 1 < 2)
{

}


level1 
level1
level1
if cond:
    level2
    level2
    level2
level1
level1

control statments
--------------------
for loop
while loop


for ( i = 1 ;i <=10 ;i++)
{

}




file extensions 
----------------

txt
docx
zip
log 
pdf
xlsx 
pptx 
yaml
json 
csv 
tar 
jpeg
mpeg
mp4
mp4 
dat 
conf 
prop
exe 
bat
apk 
xml

working with flat files ( csv json log conf dat )
------------------------


read  mode  ( r )
write mode  ( w )
append mode ( a )

reading file 
--------------

syntax:    obj = open(filename,mode)
example:  fr = open("customers.txt","r") # read mode
          fw = open("customers.txt","w") # write mode 
          # it overwrites the existing content 
          fa = open("customers.txt","a") # append mode 
          # it adds the new data




close the file 
----------------
fr.close()


reading the file 
-----------------
1. reading the file line by line 
2. fobj.read()
3. fobj.readlines()
4. using csv library
5. using pandas library


writing to file 
-----------------
fobj.write(string)
fobj.writelines(list)














working with third party files ( pdf xlsx pptx mp4 )
--------------------------





exceptio handling 
-----------------
syntax error

semantic error or runtime error or logical error 
-------------------------
handling errors that occurs during runtime is known as exception handling

try
except



Libraries 
-------------
There are 2 types of librareis 


builtin libraries 
---------------------
When python gets installed , all the builtin libraries will be installed.

C:\Python313\Lib


third party libraries
----------------------
Depending on your requirement developer has to install the
 third party library from www.pypi.org

using
1. pip tool 
2. downloading and installing manually.


requirement
-------------
cloud autoamtion
network autoamtion
web development 
web scraping 
machine learning 
deep learning 
gui 
genui



python extensions 
----------------------


abed.py     ( python progarms)
--------------------------
programs 
automations 
scripts 
web development
- my goal is to execute the whole code at at time
- network automations



abc.ipynb  ( integratedpython notebooks)
----------------------------------
- line by line execution 
- data analytics
- machine learning 
- genai

How to open abcde.ipynb 
-----------------------
open it vs code 
anaconda jupyter notebook  ( anaconda is just like vscode )

google colab